s file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
#Je sauvegarde toutes les semaines le systeme et les données
#il n'en garde que deux en ligne
0 1  * * 1 ~/sauveRPI.sh 2>&1 > ~/resultSauveRPI.txt
# Je recopie le fichier des données de Domoticz sur la clé usb des documents
0 4,16  * * *  ~/sauveDomoticz.sh 2>&1 > ~/resultSauveDomoticz.txt
#J'arrête et je relance Domoticz deux fois par semaine
0 3  * * 2,5 sudo service domoticz.sh restart
# Tomber et relancer le dongle WiFi toutes les 2 heures
#0 */2 * * * ( sudo ifdown wlan0 ; sudo ifup wlan0 ) 2>&1 > ~/resultRebootWiFi.txt
0 */1 * * * (  sudo ifup wlan0 ) 2>&1 > ~/resultRebootWiFi.txt
# Script qui permet de switcher en cas de puie coté Domoticz lancé toutes les 10 minutes
*/10 * * * * bash ~/domoticz/scripts/pluie.sh  2>&1 > ~/Pluie.txt

